#!/usr/bin/env perl
# Emacs: -*- mode: cperl; -*-
# For license: see LICENSE file at top-level

# use strict;
# use warnings;
# use diagnostics;

use File::Basename;
my $progname = basename($ARGV[0]);

#
# ------------------------------------------------------------------------
#

my $launcher = '';

#
# anything in environment?
#
if (defined $ENV{SHMEM_LAUNCHER}) {
  $launcher = $ENV{SHMEM_LAUNCHER};
}

#
# configure might have given us a SHMEM_LAUNCHER
#
if ($launcher eq '') {
  $launcher = '@SHMEM_LAUNCHER@';
}

#
# still nothing, use default
#
if ($launcher eq '') {
  $launcher = 'prun';
}

#
# ------------------------------------------------------------------------
#

sub run_it {
  return system $launcher, @ARGV;
}

#
# ------------------------------------------------------------------------
#

sub prun_launch {
  #
  # start daemons in child process
  #
  my $pid = open my $pipe, '-|', 'prte';

  if (! defined $pid) {
    print STDERR "$progname: failed to run PRTE\n";
    exit 1;
  }

  #
  # parent waits for daemon to be ready, then launches user app
  #
  if ($pid) {
    my $ok = 0;

    while (<$pipe>) {
      if (/^DVM ready/) {
	$ok = 1;
	last;
      }
    }

    #
    # assume worst; if app is good this will later be 0
    #
    my $status = 1;

    if ($ok) {
      $status = run_it();
    }

    #
    # shut down daemons
    #
    kill TERM => $pid;
    waitpid($pid,0);

    return $status;
  }
}

#
# ------------------------------------------------------------------------
#

my $err;

#
# if we're using PRRTE, fire up support, otherwise just launch
#
if ($launcher eq 'prun') {
  $err = prun_launch();
}
else {
  $err = run_it();
}

exit $err;
